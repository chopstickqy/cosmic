{"title":"解决 node-canvas 安装问题：Mac M1、Python 版本、musl 兼容性","uid":"d81abd1fab3fac8213cc029b31d1d3c6","slug":"2024-11-26","date":"2024-11-25T16:00:00.000Z","updated":"2025-02-15T17:52:03.176Z","comments":true,"path":"api/articles/2024-11-26.json","keywords":null,"cover":null,"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在项目中需要生成二维码，因此选择了 <code>easyqrcodejs</code> 作为前端和后端（Node.js）二维码生成方案。然而，在服务端使用 <code>easyqrcodejs</code> 时，依赖的 <code>node-canvas</code> 安装过程中遇到了一些问题。本文记录并提供相应的解决方案。</p>\n<hr>\n<h2 id=\"遇到的问题及解决方案\"><a href=\"#遇到的问题及解决方案\" class=\"headerlink\" title=\"遇到的问题及解决方案\"></a>遇到的问题及解决方案</h2><h3 id=\"1-Mac-M1-芯片无法安装-node-canvas\"><a href=\"#1-Mac-M1-芯片无法安装-node-canvas\" class=\"headerlink\" title=\"1. Mac M1 芯片无法安装 node-canvas\"></a>1. Mac M1 芯片无法安装 <code>node-canvas</code></h3><p>Mac M1 电脑缺少 <code>node-canvas</code> 运行所需的依赖库。可以通过以下命令安装必要的依赖：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pkg-config cairo pango libpng jpeg giflib librsvg</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>相关 Issue：<a href=\"https://github.com/Automattic/node-canvas/issues/1733\">Can’t install on Apple M1</a></p></blockquote>\n<hr>\n<h3 id=\"2-Python-版本过高导致-import-gyp-报错\"><a href=\"#2-Python-版本过高导致-import-gyp-报错\" class=\"headerlink\" title=\"2. Python 版本过高导致 import gyp 报错\"></a>2. Python 版本过高导致 <code>import gyp</code> 报错</h3><h4 id=\"报错信息片段：\"><a href=\"#报错信息片段：\" class=\"headerlink\" title=\"报错信息片段：\"></a>报错信息片段：</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">File <span class=\"string\">&quot;/Users/w/.nvm/versions/node/v18.20.4/lib/node_modules/pnpm/dist/node_modules/node-gyp/gyp/gyp_main.py&quot;</span>, line 42, <span class=\"keyword\">in</span> ‹module:</span><br><span class=\"line\">import gyp</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h4><p>该问题通常由 Python 版本过高导致，可使用 Python 3.9.6 解决：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv install 3.9.6</span><br><span class=\"line\">pyenv global 3.9.6</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"3-node-canvas-安装时报错：Not-Found-on-XXXX\"><a href=\"#3-node-canvas-安装时报错：Not-Found-on-XXXX\" class=\"headerlink\" title=\"3. node-canvas 安装时报错：Not Found on XXXX\"></a>3. <code>node-canvas</code> 安装时报错：<code>Not Found on XXXX</code></h3><h4 id=\"报错信息：\"><a href=\"#报错信息：\" class=\"headerlink\" title=\"报错信息：\"></a>报错信息：</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-pre-gyp ERR! install response status 404 Not Found on https://github.com/Automattic/node-canvas/releases/download/v2.11.2/canvas-v2.11.2-node-v108-linux-musl-x64.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"问题分析：\"><a href=\"#问题分析：\" class=\"headerlink\" title=\"问题分析：\"></a>问题分析：</h4><p>错误发生在 Linux 服务器上，其中 <code>musl</code> 代表 Linux 操作系统使用的 C 标准库，而 <code>node-canvas</code> 仅支持 <code>glibc</code>，不兼容 <code>musl</code> 版本的系统。因此，如果使用 Docker 镜像进行构建，需要确保镜像基于 <code>glibc</code>。</p>\n<h4 id=\"解决方案：-1\"><a href=\"#解决方案：-1\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h4><p>如果在 Alpine Linux（默认使用 <code>musl</code>）上安装 <code>node-canvas</code>，可以切换到 <code>glibc</code> 版本的 Linux 发行版，或者使用 <code>glibc</code> 兼容的 <code>node-canvas</code> 版本。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用带 glibc 的 Node.js 镜像</span></span><br><span class=\"line\">docker pull node:lts-bullseye</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"4-替换国内镜像源以加速安装\"><a href=\"#4-替换国内镜像源以加速安装\" class=\"headerlink\" title=\"4. 替换国内镜像源以加速安装\"></a>4. 替换国内镜像源以加速安装</h3><p>由于 <code>node-canvas</code> 需要从 <code>github</code> 下载二进制文件，国内访问较慢或受限，可使用淘宝 <code>npm</code> 镜像源进行加速。</p>\n<h4 id=\"配置-npmrc-文件：\"><a href=\"#配置-npmrc-文件：\" class=\"headerlink\" title=\"配置 .npmrc 文件：\"></a>配置 <code>.npmrc</code> 文件：</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canvas_binary_host_mirror=https://registry.npmmirror.com/-/binary/canvas/</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"直接使用-npm-安装：\"><a href=\"#直接使用-npm-安装：\" class=\"headerlink\" title=\"直接使用 npm 安装：\"></a>直接使用 <code>npm</code> 安装：</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --canvas_binary_host_mirror=https://registry.npmmirror.com/-/binary/canvas/</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用-pnpm-安装：\"><a href=\"#使用-pnpm-安装：\" class=\"headerlink\" title=\"使用 pnpm 安装：\"></a>使用 <code>pnpm</code> 安装：</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm install --config.canvas_binary_host_mirror=https://registry.npmmirror.com/-/binary/canvas/</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>在使用 <code>node-canvas</code> 进行二维码生成时，可能会遇到多个环境相关的问题。本文提供了解决 Mac M1、Python 版本、<code>musl</code> 兼容性以及安装加速等方法，希望能帮助遇到相同问题的开发者。</p>\n","text":"背景在项目中需要生成二维码，因此选择了 easyqrcodejs 作为前端和后端（Node.js）二维码生成方案。然而，在服务端使用 easyqrcodejs ...","permalink":"/post/2024-11-26","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":3,"path":"api/categories/技术.json"}],"tags":[{"name":"node-canvas","slug":"node-canvas","count":1,"path":"api/tags/node-canvas.json"},{"name":"EasyQRCodeJS","slug":"EasyQRCodeJS","count":1,"path":"api/tags/EasyQRCodeJS.json"},{"name":"Node.js","slug":"Node-js","count":1,"path":"api/tags/Node-js.json"},{"name":"M1","slug":"M1","count":1,"path":"api/tags/M1.json"},{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">遇到的问题及解决方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Mac-M1-%E8%8A%AF%E7%89%87%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85-node-canvas\"><span class=\"toc-text\">1. Mac M1 芯片无法安装 node-canvas</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Python-%E7%89%88%E6%9C%AC%E8%BF%87%E9%AB%98%E5%AF%BC%E8%87%B4-import-gyp-%E6%8A%A5%E9%94%99\"><span class=\"toc-text\">2. Python 版本过高导致 import gyp 报错</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF%E7%89%87%E6%AE%B5%EF%BC%9A\"><span class=\"toc-text\">报错信息片段：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9A\"><span class=\"toc-text\">解决方案：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-node-canvas-%E5%AE%89%E8%A3%85%E6%97%B6%E6%8A%A5%E9%94%99%EF%BC%9ANot-Found-on-XXXX\"><span class=\"toc-text\">3. node-canvas 安装时报错：Not Found on XXXX</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF%EF%BC%9A\"><span class=\"toc-text\">报错信息：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">问题分析：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9A-1\"><span class=\"toc-text\">解决方案：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%9B%BF%E6%8D%A2%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E4%BB%A5%E5%8A%A0%E9%80%9F%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">4. 替换国内镜像源以加速安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-npmrc-%E6%96%87%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">配置 .npmrc 文件：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8-npm-%E5%AE%89%E8%A3%85%EF%BC%9A\"><span class=\"toc-text\">直接使用 npm 安装：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-pnpm-%E5%AE%89%E8%A3%85%EF%BC%9A\"><span class=\"toc-text\">使用 pnpm 安装：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol>","author":{"name":"Charles","slug":"blog-author","avatar":"https://chopstickqy.github.io/images/logo.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Sentry Micro-FE solution","uid":"909ee2240a74e34caa640d66f6578279","slug":"2024-12-13","date":"2024-12-12T16:00:00.000Z","updated":"2025-02-15T17:52:03.176Z","comments":true,"path":"api/articles/2024-12-13.json","keywords":null,"cover":null,"text":"前景介绍项目在迭代过程中，公共逻辑或组件的重复使用频率也在逐渐增加。为了方便管理公共组件代码，提升开发效率等，在项目中引入微前端或者微组件的概念。 当前项目的 ...","permalink":"/post/2024-12-13","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"Technology","slug":"Technology","count":1,"path":"api/categories/Technology.json"}],"tags":[{"name":"Micro-FE","slug":"Micro-FE","count":1,"path":"api/tags/Micro-FE.json"},{"name":"Sentry","slug":"Sentry","count":1,"path":"api/tags/Sentry.json"},{"name":"Frontend","slug":"Frontend","count":1,"path":"api/tags/Frontend.json"}],"author":{"name":"Charles","slug":"blog-author","avatar":"https://chopstickqy.github.io/images/logo.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"深入了解 qiankun 微前端架构","uid":"1624086166b29c0173181762fde3aaec","slug":"2021-07-26","date":"2021-07-25T16:00:00.000Z","updated":"2025-02-15T17:52:03.176Z","comments":true,"path":"api/articles/2021-07-26.json","keywords":null,"cover":null,"text":"前言随着前端应用的复杂度不断提升，传统的单体应用架构逐渐暴露出维护困难、技术栈升级困难等问题。为了解决这些挑战，微前端架构应运而生。qiankun 作为一款基于...","permalink":"/post/2021-07-26","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"技术","slug":"技术","count":3,"path":"api/categories/技术.json"}],"tags":[{"name":"qiankun","slug":"qiankun","count":1,"path":"api/tags/qiankun.json"},{"name":"微前端","slug":"微前端","count":1,"path":"api/tags/微前端.json"},{"name":"前端架构","slug":"前端架构","count":1,"path":"api/tags/前端架构.json"}],"author":{"name":"Charles","slug":"blog-author","avatar":"https://chopstickqy.github.io/images/logo.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}